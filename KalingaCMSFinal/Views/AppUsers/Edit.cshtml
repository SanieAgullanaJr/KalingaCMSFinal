@model KalingaCMSFinal.Models.appUser

@{
    Layout = null;
}
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Edit Account Code</h4>
</div>
@using (Html.BeginForm())
{
    <div class="modal-body">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.appuserid)

            <div class="form-group">
                @Html.LabelFor(model => model.empid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.empid, ViewBag.AppUsers as SelectList, "--Select User--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.empid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <!--@Html.LabelFor(model => model.roles, htmlAttributes: new { @class = "control-label col-md-2" })-->
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.roles, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.roles, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="x_panel">
                    <div class="x_title">
                        Select Roles
                    </div>
                    <div class="x_content">
                        <div class="form-group">
                            <label class="checkbox-inline"><input type="checkbox" value="SuperAdmin" class="checkBoxes0" id="SuperAdmin0">Super Admin</label>
                            <label class="checkbox-inline"><input type="checkbox" value="AIPAdmin" class="checkBoxes0" id="AIPAdmin0">AIP Admin</label>
                            <label class="checkbox-inline"><input type="checkbox" value="SocioEconAdmin" class="checkBoxes0" id="SocioEconAdmin0">Socio Economic Admin</label>
                            <label class="checkbox-inline"><input type="checkbox" value="HRAdmim" class="checkBoxes0" id="HRAdmin0">HR Admin</label>
                            <label class="checkbox-inline"><input type="checkbox" value="SystemAdmin" class="checkBoxes0" id="SystemAdmin0">System Admin</label>
                            <label class="checkbox-inline"><input type="checkbox" value="Employee" class="checkBoxes0" id="Employee0">Employee</label>
                            <label class="checkbox-inline"><input type="checkbox" value="Charts Only" class="checkBoxes0" id="ChartsOnly0">Charts Only</label>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="modal-footer">
        <button class="btn btn-default" data-dismiss="modal">Cancel</button>
        <input class="btn btn-primary" type="submit" value="Save" />
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}