@model KalingaCMSFinal.Models.AgricultureChartsModels

<h2>Agriculture Reports</h2>
<div class="row">
    <div class="col-md-6">
        <div class="x_panel">
            <div class="x_title">
                <center><h4>Palay Area, Production and Yield</h4></center>
            </div>
            <div class="x_content">
                <center>
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-3">
                                    @Html.DropDownListFor(model => model.PalayProduction.YearTaken, ViewBag.YearTakenPalayProd as SelectList, "Year", new { @class = "form-control", id = "selectPalayProduction" })
                                    @Html.ValidationMessageFor(model => model.PalayProduction.YearTaken, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    @Html.DropDownListFor(model => model.PalayProduction.Method, new SelectList(" "), "Method", new { @class = "form-control", id = "selectMethod" })
                                    @Html.ValidationMessageFor(model => model.PalayProduction.Method, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-5">
                                    <select id="PalayProdSortBy" name="PalayProdSortBy" class="form-control">
                                        <option value="" disabled selected>Sort By</option>
                                        <option value="AreaHectares">Area Hectares</option>
                                        <option value="Production">Production</option>
                                        <option value="ProdYield">Product Yield</option>
                                    </select>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-sm-5 col-sm-offset-4">
                                    <button type="button" name="FindBtn" id="FindBtn" class="btn btn-default btn-sm form-control">Generate Chart!</button>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="canvas-holder" style="width:350px;height:350px">
                                        <canvas id="chart-area" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </center>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="x_panel">
            <div class="x_title">
                <center><h4>Corn Area, Production and Yield</h4></center>
            </div>
            <div class="x_content">
                <center>
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-3">
                                    @Html.DropDownListFor(model => model.CornProduction.YearTaken, ViewBag.YearTakenCornProd as SelectList, "Year", new { @class = "form-control", id = "selectCornProduction" })
                                    @Html.ValidationMessageFor(model => model.CornProduction.YearTaken, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-4">
                                    @Html.DropDownListFor(model => model.CornProduction.Corn, new SelectList(" "), "Corn Type", new { @class = "form-control", id = "selectCornType" })
                                    @Html.ValidationMessageFor(model => model.CornProduction.Corn, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-5">
                                    <select id="CornProdSortBy" name="CornProdSortBy" class="form-control">
                                        <option value="" disabled selected>Sort By</option>
                                        <option value="AreaHectares">Area Hectares</option>
                                        <option value="Production">Production</option>
                                        <option value="ProdYield">Product Yield</option>
                                    </select>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-sm-5 col-sm-offset-4">
                                    <button type="button" name="FindBtn0" id="FindBtn0" class="btn btn-default btn-sm form-control">Generate Chart!</button>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="canvas-holder0" style="width:350px;height:350px">
                                        <canvas id="chart-area0" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </center>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        <div class="x_panel">
            <div class="x_title">
                <center><h4>Livestock and Poultry Inventory</h4></center>
            </div>
            <div class="x_content">
                <center>
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-5">
                                    @Html.DropDownListFor(model => model.LivestockPoultry.YearTaken, ViewBag.YearTakenLivestock as SelectList, "Year", new { @class = "form-control", id = "selectLivestockPoultry" })
                                    @Html.ValidationMessageFor(model => model.LivestockPoultry.YearTaken, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-7">
                                    @Html.DropDownListFor(model => model.LivestockPoultry.Municipality, new SelectList(" "), "Municipality", new { @class = "form-control", id = "selectMunicipality" })
                                    @Html.ValidationMessageFor(model => model.LivestockPoultry.Municipality, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-sm-5 col-sm-offset-4">
                                    <button type="button" name="FindBtn1" id="FindBtn1" class="btn btn-default btn-sm form-control">Generate Chart!</button>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="canvas-holder1" style="width:350px;height:350px">
                                        <canvas id="chart-area1" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </center>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="x_panel">
            <div class="x_title">
                <center><h4>Corn Area, Production and Yield</h4></center>
            </div>
            <div class="x_content">
                <center>
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-sm-5">
                                    @Html.DropDownListFor(model => model.LivestockPoultry.YearTaken, ViewBag.YearTakenOtherCrops as SelectList, "Year", new { @class = "form-control", id = "selectOtherCrops" })
                                    @Html.ValidationMessageFor(model => model.LivestockPoultry.YearTaken, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-7">
                                    @Html.DropDownListFor(model => model.LivestockPoultry.Municipality, new SelectList(" "), "Crop Type", new { @class = "form-control", id = "selectCropType" })
                                    @Html.ValidationMessageFor(model => model.LivestockPoultry.Municipality, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-sm-5 col-sm-offset-4">
                                    <button type="button" name="FindBtn2" id="FindBtn2" class="btn btn-default btn-sm form-control">Generate Chart!</button>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="canvas-holder2" style="width:350px;height:350px">
                                        <canvas id="chart-area2" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </center>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#FindBtn0").prop("disabled", "disabled");
            $("#selectCornType").prop("disabled", "disabled");
            $("#CornProdSortBy").prop("disabled", "disabled");
            $("#FindBtn").prop("disabled", "disabled");
            $("#selectMethod").prop("disabled", "disabled");
            $("#PalayProdSortBy").prop("disabled", "disabled");
            $("#selectMunicipality").prop("disabled", "disabled");
            $("#FindBtn1").prop("disabled", "disabled");
            $("#selectCropType").prop("disabled", "disabled");
            $("#FindBtn2").prop("disabled", "disabled");


            $("#selectOtherCrops").on('change', function (e) {
                $("#selectCropType").removeAttr("disabled");
                $.get("/AgricultureReportCharts/OtherCropsTypeOfCrop", { YearTaken: $("#selectOtherCrops").val() }, function (data) {
                    $("#selectCropType").empty();
                    $.each(data, function (index, row) {
                        $("#selectCropType").append("<option value='" + row.HighValueCrop + "'>" + row.HighValueCrop + "</option>")
                    });
                });
            });
            $("#selectOtherCrops, #selectCropType").on("change", function () {
                if ($("#selectOtherCrops").val() != "") {
                    $("#FindBtn2").removeAttr("disabled");
                    $("#FindBtn2").click(function () {
                        $.get("/AgricultureReportCharts/ChartData2", { YearTaken: $("#selectOtherCrops").val(), Croptype: $("#selectCropType").val() }, function (data) {
                            var arr = [];
                            var label = ["AreaHectares","ProdMetricTons"];
                            var color1 = [];
                            $.each(data, function (index, val) {
                                var data = parseFloat(val.data);
                                var data2 = parseFloat(val.data2);
                                arr.push(data, data2);;
                                var colors1 = getRandomColor();
                                color1.push(colors1);
                            });
                            var config = {
                                type: 'pie',
                                data: {
                                    datasets: [{
                                        "data": arr,
                                        "backgroundColor": color1,
                                    }],
                                    labels: label
                                },
                                options: {
                                    responsive: true
                                }
                            };
                            $('#chart-area2').remove(); // this is my <canvas> element
                            $('#canvas-holder2').append('<canvas id="chart-area2"><canvas>');
                            var ctx = document.getElementById("chart-area2").getContext("2d");
                            window.myPie = new Chart(ctx, config);
                        });
                    });
                }
                else if ($("#selectOtherCrops").val() == "") {
                    $("#FindBtn2").prop("disabled", "disabled");
                    $("#selectCropType").prop("disabled", "disabled");
                };
            });

            $("#selectLivestockPoultry").on('change', function (e) {
                $("#selectMunicipality").removeAttr("disabled");
                $.get("/AgricultureReportCharts/LivestockMunicipalities", { YearTaken: $("#selectLivestockPoultry").val() }, function (data) {
                    $("#selectMunicipality").empty();
                    $.each(data, function (index, row) {
                        $("#selectMunicipality").append("<option value='" + row.Municipality + "'>" + row.Municipality + "</option>")
                    });
                });
            });
            $("#selectLivestockPoultry, #selectMunicipality").on("change", function () {
                if ($("#selectLivestockPoultry").val() != "") {
                    $("#FindBtn1").removeAttr("disabled");
                    $("#FindBtn1").click(function () {
                        $.get("/AgricultureReportCharts/ChartData1", { YearTaken: $("#selectLivestockPoultry").val(), Municipality: $("#selectMunicipality").val() }, function (data) {
                            var arr = [];
                            var label = [];
                            var color1 = [];
                            $.each(data, function (index, val) {
                                var data = parseFloat(val.data);
                                arr.push(data);
                                var labels = val.label;
                                label.push(labels);
                                var colors1 = getRandomColor();
                                color1.push(colors1);
                            });
                            var config = {
                                type: 'pie',
                                data: {
                                    datasets: [{
                                        "data": arr,
                                        "backgroundColor": color1,
                                    }],
                                    labels: label
                                },
                                options: {
                                    responsive: true
                                }
                            };
                            $('#chart-area1').remove(); // this is my <canvas> element
                            $('#canvas-holder1').append('<canvas id="chart-area1"><canvas>');
                            var ctx = document.getElementById("chart-area1").getContext("2d");
                            window.myPie = new Chart(ctx, config);
                        });
                    });
                }
                else if ($("#selectLivestockPoultry").val() == "") {
                    $("#FindBtn0").prop("disabled", "disabled");
                    $("#selectMunicipality").prop("disabled", "disabled");
                };
            });

            $("#selectCornProduction").on('change', function (e) {
                $("#selectCornType").removeAttr("disabled");
                $.get("/AgricultureReportCharts/CornProdCornType", { YearTaken: $("#selectCornProduction").val() }, function (data) {
                    $("#selectCornType").empty();
                    $.each(data, function (index, row) {
                        $("#selectCornType").append("<option value='" + row.Corn + "'>" + row.Corn + "</option>")
                    });
                });
            });
            $("#selectCornProduction, #selectCorn").on("change", function () {
                if ($("#selectCornProduction").val() != "") {
                    $("#CornProdSortBy").removeAttr("disabled");
                    $("#FindBtn0").removeAttr("disabled");
                    $("#FindBtn0").click(function () {
                        $.get("/AgricultureReportCharts/ChartData0", { YearTaken: $("#selectCornProduction").val(), CornType: $("#selectCornType").val(), SortBy: $("#CornProdSortBy").val() }, function (data) {
                            var arr = [];
                            var label = [];
                            var color1 = [];
                            $.each(data, function (index, val) {
                                var data = parseFloat(val.data);
                                arr.push(data);
                                var labels = val.label;
                                label.push(labels);
                                var colors1 = getRandomColor();
                                color1.push(colors1);
                            });
                            var config = {
                                type: 'pie',
                                data: {
                                    datasets: [{
                                        "data": arr,
                                        "backgroundColor": color1,
                                    }],
                                    labels: label
                                },
                                options: {
                                    responsive: true
                                }
                            };
                            $('#chart-area0').remove(); // this is my <canvas> element
                            $('#canvas-holder0').append('<canvas id="chart-area0"><canvas>');
                            var ctx = document.getElementById("chart-area0").getContext("2d");
                            window.myPie = new Chart(ctx, config);
                        });
                    });
                }
                else if ($("#selectCornProduction").val() == "") {
                    $("#FindBtn0").prop("disabled", "disabled");
                    $("#selectCornType").prop("disabled", "disabled");
                    $("#CornProdSortBy").prop("disabled", "disabled");
                };
            });
            $("#selectPalayProduction").on('change', function (e) {
                $("#selectMethod").removeAttr("disabled");
                $.get("/AgricultureReportCharts/PalayProdMethods", { YearTaken: $("#selectPalayProduction").val() }, function (data) {
                    $("#selectMethod").empty();
                    $.each(data, function (index, row) {
                        $("#selectMethod").append("<option value='" + row.Method + "'>" + row.Method + "</option>")
                    });
                });
            });
            $("#selectPalayProduction, #selectMethod").on("change", function () {
                if ($("#selectPalayProduction").val() != "") {
                    $("#FindBtn").removeAttr("disabled");
                    $("#PalayProdSortBy").removeAttr("disabled");
                    $("#FindBtn").click(function () {
                        $.get("/AgricultureReportCharts/ChartData", { YearTaken: $("#selectPalayProduction").val(), Method: $("#selectMethod").val(), SortBy: $("#PalayProdSortBy").val() }, function (data) {
                            var arr = [];
                            var label = [];
                            var color1 = [];
                            $.each(data, function (index, val) {
                                var data = parseFloat(val.data);
                                arr.push(data);
                                var labels = val.label;
                                label.push(labels);
                                var colors1 = getRandomColor();
                                color1.push(colors1);
                            });
                            var config = {
                                type: 'pie',
                                data: {
                                    datasets: [{
                                        "data": arr,
                                        "backgroundColor": color1,
                                    }],
                                    labels: label
                                },
                                options: {
                                    responsive: true
                                }
                            };
                            $('#chart-area').remove(); // this is my <canvas> element
                            $('#canvas-holder').append('<canvas id="chart-area"><canvas>');
                            var ctx = document.getElementById("chart-area").getContext("2d");
                            window.myPie = new Chart(ctx, config);
                        });
                    });
                }
                else if ($("#selectPalayProduction").val() == "") {
                    $("#FindBtn").prop("disabled", "disabled");
                    $("#selectMethod").prop("disabled", "disabled");
                    $("#PalayProdSortBy").prop("disabled", "disabled");
                };
            });
            function getRandomColor() {
                var letters = '0123456789ABCDEF';
                var color = '#';
                for (var i = 0; i < 6; i++) {
                    color += letters[Math.floor(Math.random() * 16)];
                }
                return color;
            };
        });
    </script>
}
