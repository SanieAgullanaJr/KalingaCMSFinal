@model KalingaCMSFinal.Models.ProjectProfile

@{
    Layout = null;
}

<div class="modal-header success">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Edit Project Profile</h4>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "editForm", id = "editForm" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-body">
        <div class="form-horizontal">
            @Html.HiddenFor(model => model.ProjectProfileID)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.FunctionID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.FunctionID, ViewBag.SectoralCodes as SelectList, "--Select Sectoral Codes--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FunctionID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.BDIPID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.BDIPID, ViewBag.BDIPs as SelectList, "--Select BDIP--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BDIPID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProgramID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.ProgramID, ViewBag.ProgramCodes as SelectList, "--Select Program Code--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProgramID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjCatID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.ProjCatID, ViewBag.ProjectCategories as SelectList, "--Select Project Category--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjCatID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.AccountCodeID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AccountCodeID, ViewBag.AccountCodes as SelectList, "--Select Account Code--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AccountCodeID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjReferenceOutput, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjReferenceOutput, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjReferenceOutput, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.OfficialCodeID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.OfficialCodeID, ViewBag.OfficialCodes as SelectList, "--Select Official Code--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OfficialCodeID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjItemWork, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjItemWork, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjItemWork, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.LineNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LineNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LineNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.MunicipalityID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.MunicipalityID, ViewBag.Municipalities as SelectList, "--Select Municipality--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MunicipalityID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.SectorID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SectorID, ViewBag.Sectors as SelectList, "--Select Sector--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SectorID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.barangayID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.barangayID, new SelectList(" "), "--Select Barangay--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.barangayID, "", new { @class = "text-danger", @onchange = "GetBarangay()" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjectTitle, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjectTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjectTitle, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjPurok, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjPurok, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjPurok, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjectDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.ProjectDescription, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ImpDeptID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.ImpDeptID, ViewBag.ImplementingDepartments as SelectList, "--Select Implementing Dept.--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ImpDeptID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjPS, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjPS, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjPS, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjStartDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjStartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjStartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjMOOE, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjMOOE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjMOOE, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjEndDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjEndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjEndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjCapitalOutlay, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjCapitalOutlay, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjCapitalOutlay, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjStatusID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.ProjStatusID, ViewBag.ProjectStatuses as SelectList, "--Select Implementing Dept.--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjStatusID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProjExpectedOutput, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProjExpectedOutput, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProjExpectedOutput, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.SourceFundID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.SourceFundID, ViewBag.SourceOfFunds as SelectList, "--Select Source of Fund.--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SourceFundID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-8">
                    <center><h3>AMOUNT OF CLIMATE CHANGE PPAs</h3></center>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.StrategicPriorityID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.StrategicPriorityID, ViewBag.TypologyCodes as SelectList, "--Select Typology Code--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StrategicPriorityID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.StrategicPriorityAreaID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.StrategicPriorityAreaID, ViewBag.PriorityAreas as SelectList, "--Select Priority Area--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StrategicPriorityAreaID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.AdaptationTypologyID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.AdaptationTypologyID, ViewBag.Adaptations as SelectList, "--Select Adaptations--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AdaptationTypologyID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.MitigationTypologyID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.MitigationTypologyID, ViewBag.Mitigations as SelectList, "--Select Mitigation--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MitigationTypologyID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn btn-default" data-dismiss="modal">Cancel</button>
        <input class="btn btn-primary" type="submit" value="Save" id="btnSubmit" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var form = $("#editForm")
            .removeData("validator") /* added by the raw jquery.validate plugin */
            .removeData("unobtrusiveValidation");  /* added by the jquery unobtrusive plugin*/
        $.validator.unobtrusive.parse(form);

        $("#barangayID").prop("disabled", "disabled");
        $("#btnSubmit").prop("disabled", "disabled");
        $("#MunicipalityID").change(function () {
            $("#barangayID").removeAttr("disabled");
            $.get("/NewProjects/GetBarangayList", { MunicipalityID: $("#MunicipalityID").val() }, function (data) {
                $("#barangayID").empty();
                $.each(data, function (index, row) {
                    $("#barangayID").append("<option value='" + row.barangayID + "'>" + row.Barangay + "</option>")
                });
            });
        });
        $("#ProjStartDate, #ProjEndDate").change(function () {
            var startDate = $("#ProjStartDate").val();
            var startDateArray = startDate.split('-');
            var endDate = $("#ProjEndDate").val();
            var endDateArray = endDate.split('-');
            var startYear = parseInt(startDateArray[0]);
            var startMonth = parseInt(startDateArray[1]);
            var startDay = parseInt(startDateArray[2]);
            var endYear = parseInt(endDateArray[0]);
            var endMonth = parseInt(endDateArray[1]);
            var endDay = parseInt(endDateArray[2]);
            var getDate = new Date();
            var yearNowPartial = getDate.getFullYear();
            var monthNowPartial = getDate.getMonth() + 1;
            var dayNowPartial = getDate.getDate();
            var dateNow = yearNowPartial + '/' +
                (('' + monthNowPartial).length < 2 ? '0' : '') + monthNowPartial + '/' +
                (('' + dayNowPartial).length < 2 ? '0' : '') + dayNowPartial;
            var dateNowArray = dateNow.split('/');
            var yearNow = parseInt(dateNowArray[0]);
            var monthNow = parseInt(dateNowArray[1]);
            var dayNow = parseInt(dateNowArray[2]);
            alert(startYear + " " + endYear + " " + yearNow);
            if ((startYear <= endYear) && (startYear >= yearNow)) {
                if (startMonth <= endMonth) {
                    if (startDay <= endDay) { $("#btnSubmit").removeAttr("disabled"); }
                    else { $("#btnSubmit").prop("disabled", "disabled"); }
                }
                else { $("#btnSubmit").prop("disabled", "disabled"); }
            }
            else { $("#btnSubmit").prop("disabled", "disabled"); }
        });
    </script>
}
